{"version":3,"sources":["assets/pepsi.png","assets/7up.png","assets/mirinda.png","components/Subway.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Subway","useState","lettuce","setlettuce","tomato","settomato","cheese","setcheese","chicken","setchicken","beef","setbeef","pepsi","setpepsi","sevenUp","setsevenUp","mirinda","setmirinda","totalPrice","setTotalPrice","addRemoveIngredient","action","ingredient","stateValue","price","finalPrice","console","log","meatContent","subway","push","className","i","length","subwayContent","src","sodaPepsi","alt","sodasevenUp","sodaMirinda","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bc310775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pepsi.eab112a6.png\";","module.exports = __webpack_public_path__ + \"static/media/7up.a8158fef.png\";","module.exports = __webpack_public_path__ + \"static/media/mirinda.5463a90a.png\";","import React from \"react\";\r\nimport sodaPepsi from \"../assets/pepsi.png\";\r\nimport sodasevenUp from \"../assets/7up.png\";\r\nimport sodaMirinda from \"../assets/mirinda.png\";\r\nimport { useState } from \"react\";\r\nimport \"./Subway.css\";\r\n\r\nconst Subway = () => {\r\n  const [lettuce, setlettuce] = useState(0);\r\n  const [tomato, settomato] = useState(0);\r\n  const [cheese, setcheese] = useState(0);\r\n  const [chicken, setchicken] = useState(0);\r\n  const [beef, setbeef] = useState(0);\r\n  const [pepsi, setpepsi] = useState(0);\r\n  const [sevenUp, setsevenUp] = useState(0);\r\n  const [mirinda, setmirinda] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const addRemoveIngredient = (action, ingredient) => {\r\n    let stateValue;\r\n    let price;\r\n    let finalPrice;\r\n\r\n    switch (ingredient) {\r\n      case \"lettuce\": {\r\n        stateValue = lettuce;\r\n        finalPrice = totalPrice;\r\n        price = 10;\r\n        break;\r\n      }\r\n      case \"tomato\": {\r\n        stateValue = tomato;\r\n        finalPrice = totalPrice;\r\n        price = 20;\r\n        break;\r\n      }\r\n      case \"cheese\": {\r\n        stateValue = cheese;\r\n        finalPrice = totalPrice;\r\n        price = 30;\r\n        break;\r\n      }\r\n      case \"chicken\": {\r\n        stateValue = chicken;\r\n        finalPrice = totalPrice;\r\n        price = 50;\r\n        break;\r\n      }\r\n      case \"beef\": {\r\n        stateValue = beef;\r\n        finalPrice = totalPrice;\r\n        price = 60;\r\n        break;\r\n      }\r\n\r\n      case \"pepsi\": {\r\n        stateValue = pepsi;\r\n        finalPrice = totalPrice;\r\n        price = 200;\r\n        break;\r\n      }\r\n      case \"sevenUp\": {\r\n        stateValue = sevenUp;\r\n        finalPrice = totalPrice;\r\n        price = 200;\r\n        break;\r\n      }\r\n      case \"mirinda\": {\r\n        stateValue = mirinda;\r\n        finalPrice = totalPrice;\r\n        price = 200;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    if (action === \"add\") {\r\n      if (stateValue < 1) {\r\n        stateValue = stateValue + 1;\r\n        finalPrice = finalPrice + price;\r\n      }\r\n    } else {\r\n      stateValue = stateValue - 1;\r\n      if (stateValue >= 0) {\r\n        finalPrice = finalPrice - price;\r\n        console.log(finalPrice);\r\n      }\r\n    }\r\n\r\n    switch (ingredient) {\r\n      case \"lettuce\": {\r\n        setlettuce(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"tomato\": {\r\n        settomato(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"cheese\": {\r\n        setcheese(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"chicken\": {\r\n        setchicken(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"beef\": {\r\n        setbeef(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"pepsi\": {\r\n        setpepsi(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"sevenUp\": {\r\n        setsevenUp(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      case \"mirinda\": {\r\n        setmirinda(stateValue >= 0 ? stateValue : 0);\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setTotalPrice(finalPrice);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  //Graphical display of added ingredients\r\n\r\n  //For Meat Display\r\n  const meatContent = (subway) => {\r\n    if (chicken < 0) {\r\n      subway.push(<div className=\"chickenSide\"></div>);\r\n    }\r\n    if (beef < 0) {\r\n      subway.push(<div className=\"beefSide\"></div>);\r\n    }\r\n  };\r\n\r\n  const subwayContent = () => {\r\n    let subway = [];\r\n\r\n    // outputting the lettuce\r\n    for (let i = 0; i < lettuce; i++) {\r\n      subway.push(<div className=\"lettuceSide\"></div>);\r\n    }\r\n    // outputting the tomato\r\n    for (let i = 0; i < tomato; i++) {\r\n      subway.push(<div className=\"tomatoSide\"></div>);\r\n    }\r\n    // outputting the cheese\r\n    for (let i = 0; i < cheese; i++) {\r\n      subway.push(<div className=\"cheeseSide\"></div>);\r\n    }\r\n    //outputting the meat\r\n    for (let i = 0; i < chicken; i++) {\r\n      if (beef === 0) {\r\n        subway.push(<div className=\"chickenSide\">{meatContent(subway)}</div>);\r\n      }\r\n\r\n    }\r\n    for (let i = 0; i < beef; i++) {\r\n      if (chicken === 0) {\r\n        subway.push(<div className=\"beefSide\">{meatContent()}</div>);\r\n      }\r\n    }\r\n\r\n\r\n    if (subway.length === 0) subway.push(<p></p>);\r\n    return subway;\r\n  };\r\n\r\n\r\n\r\n\r\n  //For Drink Display\r\n  const drinkContent = () => {\r\n    if (pepsi > 0)\r\n      return <img className=\"drinksImage\" src={sodaPepsi} alt=\"pepsi\"></img>;\r\n    if (sevenUp > 0)\r\n      return <img className=\"drinksImage\" src={sodasevenUp} alt=\"sevenup\"></img>;\r\n    if (mirinda > 0)\r\n      return <img className=\"drinksImage\" src={sodaMirinda} alt=\"mirinda\"></img>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"subwayContainer\">\r\n      <h1 className=\"red\">CREATE YOUR SUBWAY</h1>\r\n      <div className=\"innerSubwayContainer\">\r\n        <div className=\"subwayDrinkContainer\">\r\n          <div className=\"subwayIngredients scrollbar\">\r\n            <div className=\"topSide\"></div>\r\n            {subwayContent()}\r\n            <div className=\"bottomSide\"></div>\r\n          </div>\r\n          <div className=\"drinkContainer\">{drinkContent()}</div>\r\n        </div>\r\n\r\n        <div className=\"priceCounter\">\r\n          <strong>Total:</strong> Rs.{totalPrice}\r\n        </div>\r\n\r\n        <div className=\"ingredientsBlock\">\r\n          <div className=\"title\">\r\n            <p>Veggies</p>\r\n          </div>\r\n\r\n          <div className=\"ingredientsWithButtons\">\r\n            <p>LETTUCE</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"add\", \"lettuce\")}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"lettuce\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ingredientsWithButtons\">\r\n            <p>TOMATO</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"add\", \"tomato\")}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"tomato\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"ingredientsWithButtons\">\r\n            <p>CHEESE</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"add\", \"cheese\")}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"cheese\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <div className=\"title\">\r\n            <p>Meat</p>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              beef === 0 ? `ingredientsWithButtons` : \"none\"\r\n\r\n            }\r\n\r\n          >\r\n            <p>CHICKEN</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"add\", \"chicken\")}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"chicken\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div\r\n            className={\r\n              chicken === 0 ? `ingredientsWithButtons` : \"none\"\r\n            }\r\n          >\r\n            <p>BEEF</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"add\", \"beef\")}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"beef\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n          <hr />\r\n\r\n          <div className=\"title\">\r\n            <p>Drinks</p>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              mirinda === 0 && sevenUp === 0 ? `ingredientsWithButtons` : \"none\"\r\n            }\r\n          >\r\n            <p>PEPSI</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => {\r\n                  if (sevenUp === 0 && mirinda === 0)\r\n                    addRemoveIngredient(\"add\", \"pepsi\");\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"pepsi\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              pepsi === 0 && mirinda === 0 ? `ingredientsWithButtons` : \"none\"\r\n            }\r\n          >\r\n            <p>7UP</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => {\r\n                  if (pepsi === 0 && mirinda === 0)\r\n                    addRemoveIngredient(\"add\", \"sevenUp\");\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"sevenUp\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className={\r\n              pepsi === 0 && sevenUp === 0 ? `ingredientsWithButtons` : \"none\"\r\n            }\r\n          >\r\n            <p>MIRINDA</p>\r\n            <div className=\"ingrBtns\">\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => {\r\n                  if (pepsi === 0 && sevenUp === 0)\r\n                    addRemoveIngredient(\"add\", \"mirinda\");\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n              <button\r\n                className=\"ingrBtn\"\r\n                onClick={() => addRemoveIngredient(\"remove\", \"mirinda\")}\r\n              >\r\n                -\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default Subway;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Subway from \"./components/Subway\";\n\nfunction App() {\n  return (\n    <div>\n      <Subway />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}